{"project_name":"zxing","relative_path":"zxing/core/src/main/java/com/google/zxing/aztec/encoder/Encoder.java","file_name":"Encoder.java","package":"com.google.zxing.aztec.encoder","class_name":"Encoder","method_name":"encode","source_code":"public static AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers, Charset charset) {\n  byte[] bytes = data.getBytes(null != charset ? charset : StandardCharsets.ISO_8859_1);\n  return encode(bytes, minECCPercent, userSpecifiedLayers, charset);\n}","context":"package com.google.zxing.aztec.encoder;\nimport com.google.zxing.common.BitArray;\nimport com.google.zxing.common.BitMatrix;\nimport com.google.zxing.common.reedsolomon.GenericGF;\nimport com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\nimport java.nio.charset.Charset;\nimport java.nio.charset.StandardCharsets;\nfinal public class Encoder {\n    static public final int DEFAULT_EC_PERCENT;\n    static public final int DEFAULT_AZTEC_LAYERS;\n    static final private int MAX_NB_BITS;\n    static final private int MAX_NB_BITS_COMPACT;\n    static final private int[] WORD_SIZE;\n    private Encoder();\n    static public AztecCode encode(String data);\n    static public AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers);\n    static public AztecCode encode(String data, int minECCPercent, int userSpecifiedLayers, Charset charset);\n    static public AztecCode encode(byte[] data);\n    static public AztecCode encode(byte[] data, int minECCPercent, int userSpecifiedLayers);\n    static public AztecCode encode(byte[] data, int minECCPercent, int userSpecifiedLayers, Charset charset);\n    static private  drawBullsEye(BitMatrix matrix, int center, int size);\n    static BitArray generateModeMessage(boolean compact, int layers, int messageSizeInWords);\n    static private  drawModeMessage(BitMatrix matrix, boolean compact, int matrixSize, BitArray modeMessage);\n    static private BitArray generateCheckWords(BitArray bitArray, int totalBits, int wordSize);\n    static private int[] bitsToWords(BitArray stuffedBits, int wordSize, int totalWords);\n    static private GenericGF getGF(int wordSize);\n    static BitArray stuffBits(BitArray bits, int wordSize);\n    static private int totalBitsInLayer(int layers, boolean compact);\n}","docstring":"/**\n   * Encodes the given string content as an Aztec symbol\n   *\n   * @param data input data string\n   * @param minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008,\n   *                      a minimum of 23% + 3 words is recommended)\n   * @param userSpecifiedLayers if non-zero, a user-specified value for the number of layers\n   * @param charset character set in which to encode string using ECI; if null, no ECI code\n   *                will be inserted, and the string must be encodable as ISO/IEC 8859-1\n   *                (Latin-1), the default encoding of the symbol.\n   * @return Aztec symbol matrix with metadata\n   */"}