{"project_name":"jfreechart","relative_path":"jfreechart/src/main/java/org/jfree/data/general/Series.java","file_name":"Series.java","package":"org.jfree.data.general","class_name":"Series","method_name":"equals","source_code":"@Override\npublic boolean equals(Object obj) {\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof Series)) {\n        return false;\n    }\n    Series that = (Series) obj;\n    if (!Objects.equals(this.key, that.key)) {\n        return false;\n    }\n    if (!Objects.equals(this.description, that.description)) {\n        return false;\n    }\n    if (!that.canEqual(this)) {\n        return false;\n    }\n    return true;\n}","context":"package org.jfree.data.general;\nimport org.jfree.chart.util.Args;\nimport javax.swing.event.EventListenerList;\nimport java.beans;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.Serializable;\nimport java.util.Objects;\nabstract public class Series implements Cloneable, Serializable {\n    static final private long serialVersionUID;\n    private Comparable key;\n    private String description;\n    transient private EventListenerList listeners;\n    transient private PropertyChangeSupport propertyChangeSupport;\n    transient private VetoableChangeSupport vetoableChangeSupport;\n    private boolean notify;\n    protected Series(Comparable key);\n    protected Series(Comparable key, String description);\n    public Comparable getKey();\n    public  setKey(Comparable key);\n    public String getDescription();\n    public  setDescription(String description);\n    public boolean getNotify();\n    public  setNotify(boolean notify);\n    public boolean isEmpty();\n    abstract public int getItemCount();\n    public Object clone()throws CloneNotSupportedException;\n    public boolean equals(Object obj);\n    public boolean canEqual(Object other);\n    public int hashCode();\n    public  addChangeListener(SeriesChangeListener listener);\n    public  removeChangeListener(SeriesChangeListener listener);\n    public  fireSeriesChanged();\n    protected  notifyListeners(SeriesChangeEvent event);\n    public  addPropertyChangeListener(PropertyChangeListener listener);\n    public  removePropertyChangeListener(PropertyChangeListener listener);\n    protected  firePropertyChange(String property, Object oldValue, Object newValue);\n    public  addVetoableChangeListener(VetoableChangeListener listener);\n    public  removeVetoableChangeListener(VetoableChangeListener listener);\n    protected  fireVetoableChange(String property, Object oldValue, Object newValue)throws PropertyVetoException;\n    private  writeObject(ObjectOutputStream stream)throws IOException;\n    private  readObject(ObjectInputStream stream)throws IOException, ClassNotFoundException;\n}","docstring":"/**\n     * Tests the series for equality with another object.\n     *\n     * @param obj  the object ({@code null} permitted).\n     *\n     * @return {@code true} or {@code false}.\n     */"}