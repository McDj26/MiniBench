{"project_name":"Java","relative_path":"Java/src/main/java/com/thealgorithms/ciphers/SimpleSubstitutionCipher.java","file_name":"SimpleSubstitutionCipher.java","package":"com.thealgorithms.ciphers","class_name":"SimpleSubstitutionCipher","method_name":"decode","source_code":"public static String decode(String encryptedMessage, String cipherSmall) {\n    StringBuilder decoded = new StringBuilder();\n    Map<Character, Character> cipherMap = new HashMap<>();\n    char beginSmallLetter = 'a';\n    char beginCapitalLetter = 'A';\n    cipherSmall = cipherSmall.toLowerCase();\n    String cipherCapital = cipherSmall.toUpperCase();\n    for (int i = 0; i < cipherSmall.length(); i++) {\n        cipherMap.put(cipherSmall.charAt(i), beginSmallLetter++);\n        cipherMap.put(cipherCapital.charAt(i), beginCapitalLetter++);\n    }\n    for (int i = 0; i < encryptedMessage.length(); i++) {\n        if (Character.isAlphabetic(encryptedMessage.charAt(i))) {\n            decoded.append(cipherMap.get(encryptedMessage.charAt(i)));\n        } else {\n            decoded.append(encryptedMessage.charAt(i));\n        }\n    }\n    return decoded.toString();\n}","context":"package com.thealgorithms.ciphers;\nimport java.util.HashMap;\nimport java.util.Map;\npublic class SimpleSubstitutionCipher {\n    static public String encode(String message, String cipherSmall);\n    static public String decode(String encryptedMessage, String cipherSmall);\n}","docstring":"/**\n     * Decrypt message by replacing each element with its opposite character in\n     * cipher.\n     *\n     * @return message\n     */"}