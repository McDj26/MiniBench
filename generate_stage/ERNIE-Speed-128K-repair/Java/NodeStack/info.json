{"project_name":"Java","relative_path":"Java/src/main/java/com/thealgorithms/datastructures/stacks/NodeStack.java","file_name":"NodeStack.java","package":"com.thealgorithms.datastructures.stacks","class_name":"NodeStack","method_name":"push","source_code":"public void push(Item item) {\n    NodeStack<Item> newNs = new NodeStack<Item>(item);\n    if (this.isEmpty()) {\n        NodeStack.setHead(new NodeStack<>(item));\n        newNs.setNext(null);\n        newNs.setPrevious(null);\n    } else {\n        newNs.setPrevious(NodeStack.head);\n        NodeStack.head.setNext(newNs);\n        NodeStack.setHead(newNs);\n    }\n    NodeStack.setSize(NodeStack.getSize() + 1);\n}","context":"package com.thealgorithms.datastructures.stacks;\npublic class NodeStack {\n    static public  main(String args);\n    private Item data;\n    static private NodeStack<> head;\n    private NodeStack<> previous;\n    static private int size;\n    public NodeStack();\n    private NodeStack(Item item);\n    public  push(Item item);\n    public Item pop();\n    public Item peek();\n    public boolean isEmpty();\n    public int size();\n    public  print();\n    static private  setHead(NodeStack<> ns);\n    private  setNext(NodeStack<> next);\n    private NodeStack<> getPrevious();\n    private  setPrevious(NodeStack<> previous);\n    static private int getSize();\n    static private  setSize(int size);\n    private Item getData();\n}","docstring":"/**\n     * Put a value onto the stack.\n     *\n     * @param item : value to be put on the stack.\n     */"}