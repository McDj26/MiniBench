{"project_name":"commons-math","relative_path":"commons-math/commons-math-neuralnet/src/main/java/org/apache/commons/math4/neuralnet/Neuron.java","file_name":"Neuron.java","package":"org.apache.commons.math4.neuralnet","class_name":"Neuron","method_name":"containSameValues","source_code":"private boolean containSameValues(double[] current,\n                                  double[] expect) {\n    if (expect.length != size) {\n        throw new NeuralNetException(NeuralNetException.SIZE_MISMATCH,\n                                     expect.length, size);\n    }\n    for (int i = 0; i < size; i++) {\n        if (!Precision.equals(current[i], expect[i])) {\n            return false;\n        }\n    }\n    return true;\n}","context":"package org.apache.commons.math4.neuralnet;\nimport java.util.concurrent.atomic.AtomicReference;\nimport java.util.concurrent.atomic.AtomicLong;\nimport org.apache.commons.numbers.core.Precision;\nimport org.apache.commons.math4.neuralnet.internal.NeuralNetException;\npublic class Neuron {\n    final private long identifier;\n    final private int size;\n    final private AtomicReference<double[]> features;\n    final private AtomicLong numberOfAttemptedUpdates;\n    final private AtomicLong numberOfSuccessfulUpdates;\n    Neuron(long identifier, double[] features);\n    public synchronized Neuron copy();\n    public long getIdentifier();\n    public int getSize();\n    public double[] getFeatures();\n    public boolean compareAndSetFeatures(double[] expect, double[] update);\n    public long getNumberOfAttemptedUpdates();\n    public long getNumberOfSuccessfulUpdates();\n    private boolean containSameValues(double[] current, double[] expect);\n}","docstring":"/**\n     * Checks whether the contents of both arrays is the same.\n     *\n     * @param current Current values.\n     * @param expect Expected values.\n     * @throws IllegalArgumentException if the length of {@code expect}\n     * is not the same as specified in the {@link #Neuron(long,double[])\n     * constructor}.\n     * @return {@code true} if the arrays contain the same values.\n     */"}