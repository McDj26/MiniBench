{"project_name":"jfreechart","relative_path":"jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java","file_name":"DatasetUtils.java","package":"org.jfree.data.general","class_name":"DatasetUtils","method_name":"calculatePieDatasetTotal","source_code":"public static double calculatePieDatasetTotal(PieDataset dataset) {\n    Args.nullNotPermitted(dataset, \"dataset\");\n    List keys = dataset.getKeys();\n    double totalValue = 0;\n    Iterator iterator = keys.iterator();\n    while (iterator.hasNext()) {\n        Comparable current = (Comparable) iterator.next();\n        if (current != null) {\n            Number value = dataset.getValue(current);\n            double v = 0.0;\n            if (value != null) {\n                v = value.doubleValue();\n            }\n            if (v > 0) {\n                totalValue = totalValue + v;\n            }\n        }\n    }\n    return totalValue;\n}","context":"package org.jfree.data.general;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport org.jfree.chart.util.ArrayUtils;\nimport org.jfree.chart.util.Args;\nimport org.jfree.data.DomainInfo;\nimport org.jfree.data.DomainOrder;\nimport org.jfree.data.KeyToGroupMap;\nimport org.jfree.data.KeyedValues;\nimport org.jfree.data.Range;\nimport org.jfree.data.RangeInfo;\nimport org.jfree.data.category.CategoryDataset;\nimport org.jfree.data.category.CategoryRangeInfo;\nimport org.jfree.data.category.DefaultCategoryDataset;\nimport org.jfree.data.category.IntervalCategoryDataset;\nimport org.jfree.data.function.Function2D;\nimport org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;\nimport org.jfree.data.statistics.BoxAndWhiskerXYDataset;\nimport org.jfree.data.statistics.MultiValueCategoryDataset;\nimport org.jfree.data.statistics.StatisticalCategoryDataset;\nimport org.jfree.data.xy.IntervalXYDataset;\nimport org.jfree.data.xy.OHLCDataset;\nimport org.jfree.data.xy.TableXYDataset;\nimport org.jfree.data.xy.XYDataset;\nimport org.jfree.data.xy.XYDomainInfo;\nimport org.jfree.data.xy.XYRangeInfo;\nimport org.jfree.data.xy.XYSeries;\nimport org.jfree.data.xy.XYSeriesCollection;\nimport org.jfree.data.xy.XYZDataset;\nfinal public class DatasetUtils {\n    private DatasetUtils();\n    static public double calculatePieDatasetTotal(PieDataset dataset);\n    static public PieDataset createPieDatasetForRow(CategoryDataset dataset, Comparable rowKey);\n    static public PieDataset createPieDatasetForRow(CategoryDataset dataset, int row);\n    static public PieDataset createPieDatasetForColumn(CategoryDataset dataset, Comparable columnKey);\n    static public PieDataset createPieDatasetForColumn(CategoryDataset dataset, int column);\n    static public PieDataset createConsolidatedPieDataset(PieDataset source, Comparable key, double minimumPercent);\n    static public PieDataset createConsolidatedPieDataset(PieDataset source, Comparable key, double minimumPercent, int minItems);\n    static public CategoryDataset createCategoryDataset(String rowKeyPrefix, String columnKeyPrefix, double[][] data);\n    static public CategoryDataset createCategoryDataset(String rowKeyPrefix, String columnKeyPrefix, Number data);\n    static public CategoryDataset createCategoryDataset(Comparable rowKeys, Comparable columnKeys, double[][] data);\n    static public CategoryDataset createCategoryDataset(Comparable rowKey, KeyedValues rowData);\n    static public XYDataset sampleFunction2D(Function2D f, double start, double end, int samples, Comparable seriesKey);\n    static public XYSeries sampleFunction2DToSeries(Function2D f, double start, double end, int samples, Comparable seriesKey);\n    static public boolean isEmptyOrNull(PieDataset dataset);\n    static public boolean isEmptyOrNull(CategoryDataset dataset);\n    static public boolean isEmptyOrNull(XYDataset dataset);\n    static public Range findDomainBounds(XYDataset dataset);\n    static public Range findDomainBounds(XYDataset dataset, boolean includeInterval);\n    static public Range findDomainBounds(XYDataset dataset, List visibleSeriesKeys, boolean includeInterval);\n    static public Range iterateDomainBounds(XYDataset dataset);\n    static public Range iterateDomainBounds(XYDataset dataset, boolean includeInterval);\n    static public Range findRangeBounds(CategoryDataset dataset);\n    static public Range findRangeBounds(CategoryDataset dataset, boolean includeInterval);\n    static public Range findRangeBounds(CategoryDataset dataset, List visibleSeriesKeys, boolean includeInterval);\n    static public Range findRangeBounds(XYDataset dataset);\n    static public Range findRangeBounds(XYDataset dataset, boolean includeInterval);\n    static public Range findRangeBounds(XYDataset dataset, List visibleSeriesKeys, Range xRange, boolean includeInterval);\n    static public Range iterateRangeBounds(CategoryDataset dataset);\n    static public Range iterateRangeBounds(CategoryDataset dataset, boolean includeInterval);\n    static public Range iterateToFindRangeBounds(CategoryDataset dataset, List visibleSeriesKeys, boolean includeInterval);\n    static public Range iterateRangeBounds(XYDataset dataset);\n    static public Range iterateRangeBounds(XYDataset dataset, boolean includeInterval);\n    static public Range findZBounds(XYZDataset dataset);\n    static public Range findZBounds(XYZDataset dataset, boolean includeInterval);\n    static public Range findZBounds(XYZDataset dataset, List visibleSeriesKeys, Range xRange, boolean includeInterval);\n    static public Range iterateZBounds(XYZDataset dataset);\n    static public Range iterateZBounds(XYZDataset dataset, boolean includeInterval);\n    static public Range iterateToFindDomainBounds(XYDataset dataset, List visibleSeriesKeys, boolean includeInterval);\n    static public Range iterateToFindRangeBounds(XYDataset dataset, List visibleSeriesKeys, Range xRange, boolean includeInterval);\n    static public Range iterateToFindZBounds(XYZDataset dataset, List visibleSeriesKeys, Range xRange, boolean includeInterval);\n    static public Number findMinimumDomainValue(XYDataset dataset);\n    static public Number findMaximumDomainValue(XYDataset dataset);\n    static public Number findMinimumRangeValue(CategoryDataset dataset);\n    static public Number findMinimumRangeValue(XYDataset dataset);\n    static public Number findMaximumRangeValue(CategoryDataset dataset);\n    static public Number findMaximumRangeValue(XYDataset dataset);\n    static public Range findStackedRangeBounds(CategoryDataset dataset);\n    static public Range findStackedRangeBounds(CategoryDataset dataset, double base);\n    static public Range findStackedRangeBounds(CategoryDataset dataset, KeyToGroupMap map);\n    static public Number findMinimumStackedRangeValue(CategoryDataset dataset);\n    static public Number findMaximumStackedRangeValue(CategoryDataset dataset);\n    static public Range findStackedRangeBounds(TableXYDataset dataset);\n    static public Range findStackedRangeBounds(TableXYDataset dataset, double base);\n    static public double calculateStackTotal(TableXYDataset dataset, int item);\n    static public Range findCumulativeRangeBounds(CategoryDataset dataset);\n    static public double findYValue(XYDataset dataset, int series, double x);\n    static public int[] findItemIndicesForX(XYDataset dataset, int series, double x);\n}","docstring":"/**\n     * Calculates the total of all the values in a {@link PieDataset}.  If\n     * the dataset contains negative or {@code null} values, they are\n     * ignored.\n     *\n     * @param dataset  the dataset ({@code null} not permitted).\n     *\n     * @return The total.\n     */"}