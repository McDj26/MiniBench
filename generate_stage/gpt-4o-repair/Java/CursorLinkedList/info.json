{"project_name":"Java","relative_path":"Java/src/main/java/com/thealgorithms/datastructures/lists/CursorLinkedList.java","file_name":"CursorLinkedList.java","package":"com.thealgorithms.datastructures.lists","class_name":"CursorLinkedList","method_name":"indexOf","source_code":"public int indexOf(T element) {\n    Objects.requireNonNull(element);\n    Node<T> iterator = cursorSpace[head];\n    for (int i = 0; i < count; i++) {\n        if (iterator.element.equals(element)) {\n            return i;\n        }\n        iterator = cursorSpace[iterator.next];\n    }\n    return -1;\n}","context":"package com.thealgorithms.datastructures.lists;\nimport java.util.Objects;\npublic class CursorLinkedList {\n    static private class Node {\n        T element;\n        int next;\n        Node(T element, int next);\n    }\n    final private int os;\n    private int head;\n    final private Node<T> cursorSpace;\n    private int count;\n    static final private int CURSOR_SPACE_SIZE;\n    public CursorLinkedList();\n    public  printList();\n    public int indexOf(T element);\n    public T get(int position);\n    public  removeByIndex(int index);\n    public  remove(T element);\n    private  free(int index);\n    public  append(T element);\n    private int alloc();\n}","docstring":"/**\n     * @return the logical index of the element within the list , not the actual\n     * index of the [cursorSpace] array\n     */"}